buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        // maven {
        //   url 'client.specific.maven.repo.url'
        // }
    }
    dependencies {
        classpath files('./lib/build/gradle-tomcat-plugin-0.9.5.jar')
    }
}


apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'war'
apply plugin: 'tomcat'

repositories {
    mavenCentral()
    mavenLocal()
    // maven {
    //    url 'http://client.specific.maven.repo.url'
    // }
}

def version = System.env.BUILD_NUMBER
dependencies {
    groovy 'org.codehaus.groovy:groovy-all:2.0.5'
    groovy 'org.apache.ivy:ivy:2.2.0'

    compile 'org.apache.commons:commons-lang3:3.1'

    // spark framework and dependencies
    compile files('./lib/spark-0.9.9.4-SNAPSHOT.jar')
    compile 'org.slf4j:slf4j-log4j12:1.6.1'
    compile 'commons-io:commons-io:1.3.2'

    // other dependencies
    compile 'com.fasterxml.jackson.core:jackson-core:2.1.1'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.1.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.1.1'

    compile 'com.google.guava:guava:13.0.1'
    compile 'com.squareup:dagger:0.9' 
    compile 'org.apache.httpcomponents:httpclient:4.2.1'

    testCompile 'junit:junit:4.10'

    // tomcat plugin
    def tomcatVersion = '7.0.11'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
            "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
}

task createSourceDirs(description : 'Create empty source directories for all defined sourceSets') << {
    sourceSets*.allSource.srcDirs.flatten().each { File sourceDirectory ->
        if (!sourceDirectory.exists()) {
            println "Making $sourceDirectory"
            sourceDirectory.mkdirs()
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.2'
}

idea {
    project {
        jdkName = '1.7'
        ipr {
            withXml { provider ->
                provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git'
            }
        }
    }
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}


war {
    baseName = "myapp.${version}"
}
